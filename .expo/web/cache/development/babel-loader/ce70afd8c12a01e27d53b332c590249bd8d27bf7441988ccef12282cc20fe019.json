{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { Center, Box, Heading, VStack, FormControl, Input, Button, Text, HStack } from 'native-base';\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var db = SQLite.openDatabase('Mobile.db');\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(`CREATE TABLE IF NOT EXISTS users (\n          id INTEGER PRIMARY KEY NOT NULL,\n          name TEXT DEFAULT 'abc abc',\n          age INTEGER DEFAULT 18,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL\n      );`, [], function (_, result) {}, function (_, error) {\n        console.error('Lỗi tạo cơ sở dữ liệu:', error);\n      });\n    });\n  }, []);\n  var handleLogIn = function handleLogIn() {\n    navigation.navigate('Login');\n  };\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setError('');\n      if (password !== confirmPassword) {\n        setError('Mật khẩu xác nhận không trùng khớp');\n        return;\n      }\n      if (password.length < 8) {\n        setError('Mật khẩu phải nhiều hơn 8 ký tự.');\n        return;\n      }\n      db.transaction(function (tx) {\n        tx.executeSql('INSERT INTO users (email, password) VALUES (?, ?)', [email, password], function (_, result) {\n          if (result.rowsAffected > 0) {\n            alert('Đăng ký thành công.');\n            handleLogIn();\n          } else {\n            alert('Đăng ký thất bại. Vui lòng thử lại.');\n          }\n        }, function (_, error) {\n          console.error('Lỗi thêm người dùng:', error);\n          alert('Đăng ký thất bại. Vui lòng thử lại.');\n        });\n      });\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(Center, {\n    flex: 1,\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: 2,\n      w: \"100%\",\n      h: \"100%\",\n      bg: \"white\",\n      rounded: \"lg\",\n      justifyContent: \"center\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        color: \"coolGray.800\",\n        _dark: {\n          color: 'warmGray.50'\n        },\n        fontWeight: \"semibold\",\n        textAlign: \"center\",\n        children: \"Welcome\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: 5,\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email\"\n          }), _jsx(Input, {\n            placeholder: \"Email\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            placeholder: \"Password\",\n            type: \"password\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(FormControl.HelperText, {\n            _text: {\n              fontSize: 'xs'\n            },\n            children: \"Password ph\\u1EA3i c\\xF3 tr\\xEAn 8 k\\xFD t\\u1EF1 v\\xE0 ph\\u1EA3i c\\xF3 k\\xFD t\\u1EF1 in hoa, in th\\u01B0\\u1EDDng v\\xE0 k\\xFD t\\u1EF1 s\\u1ED1\"\n          }), error !== '' && _jsx(Text, {\n            color: \"red.500\",\n            fontSize: \"sm\",\n            mt: 2,\n            children: error\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Confirm Password\"\n          }), _jsx(Input, {\n            placeholder: \"Confirm Password\",\n            type: \"password\",\n            value: confirmPassword,\n            onChangeText: function onChangeText(text) {\n              return setConfirmPassword(text);\n            }\n          })]\n        }), _jsx(Button, {\n          mt: 2,\n          colorScheme: \"indigo\",\n          onPress: handleSignUp,\n          children: \"Sign up\"\n        })]\n      }), _jsxs(HStack, {\n        space: 1,\n        alignItems: \"center\",\n        mt: 2,\n        children: [_jsx(Text, {\n          children: \"B\\u1EA1n \\u0111\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n?\"\n        }), _jsx(Text, {\n          fontSize: \"md\",\n          color: \"indigo.500\",\n          onPress: handleLogIn,\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Center","Box","Heading","VStack","FormControl","Input","Button","Text","HStack","SQLite","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","error","setError","db","openDatabase","transaction","tx","executeSql","_","result","console","handleLogIn","navigate","handleSignUp","_ref2","_asyncToGenerator","length","rowsAffected","alert","apply","arguments","flex","children","safeArea","p","w","h","bg","rounded","justifyContent","size","color","_dark","fontWeight","textAlign","space","mt","Label","placeholder","value","onChangeText","text","type","HelperText","_text","fontSize","colorScheme","onPress","alignItems"],"sources":["C:/Users/acer/Desktop/mobile/E-Commerce-Mobile-App/src/screen/Register/Register.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Center, Box, Heading, VStack, FormControl, Input, Button, Text, HStack } from 'native-base';\r\nimport * as SQLite from 'expo-sqlite';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('')\r\n\r\n  const db = SQLite.openDatabase('Mobile.db');\r\n\r\n  useEffect(() => {\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS users (\r\n          id INTEGER PRIMARY KEY NOT NULL,\r\n          name TEXT DEFAULT 'abc abc',\r\n          age INTEGER DEFAULT 18,\r\n          email TEXT NOT NULL,\r\n          password TEXT NOT NULL\r\n      );`,\r\n        [],\r\n        (_, result) => {\r\n          // Xử lý sau khi cơ sở dữ liệu được tạo hoặc đã tồn tại\r\n        },\r\n        (_, error) => {\r\n          console.error('Lỗi tạo cơ sở dữ liệu:', error);\r\n        }\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   db.transaction((tx) => {\r\n  //     // Drop the 'users' table if it exists\r\n  //     tx.executeSql(\r\n  //       `DROP TABLE IF EXISTS users`,\r\n  //       [],\r\n  //       (_, result) => {\r\n  //         // Table dropped successfully or did not exist\r\n  //         console.log('Table dropped successfully or did not exist.');\r\n          \r\n  //         // Now, create the 'users' table\r\n  //         tx.executeSql(\r\n  //           `CREATE TABLE IF NOT EXISTS users (\r\n  //             id INTEGER PRIMARY KEY NOT NULL,\r\n  //             name TEXT DEFAULT 'abc abc',\r\n  //             age INTEGER DEFAULT 18,\r\n  //             email TEXT NOT NULL,\r\n  //             password TEXT NOT NULL\r\n  //           );`,\r\n  //           [],\r\n  //           (_, result) => {\r\n  //             // Xử lý sau khi cơ sở dữ liệu được tạo hoặc đã tồn tại\r\n  //           },\r\n  //           (_, error) => {\r\n  //             console.error('Lỗi tạo cơ sở dữ liệu:', error);\r\n  //           }\r\n  //         );\r\n  //       },\r\n  //       (_, error) => {\r\n  //         console.error('Lỗi xóa bảng:', error);\r\n  //       }\r\n  //     );\r\n  //   }, []);\r\n  // });\r\n\r\n  const handleLogIn = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    setError('')\r\n    if (password !== confirmPassword) {\r\n      setError('Mật khẩu xác nhận không trùng khớp')\r\n      return;\r\n    }\r\n\r\n    if (password.length < 8) { \r\n      setError('Mật khẩu phải nhiều hơn 8 ký tự.')\r\n      return;\r\n    }\r\n    db.transaction((tx) => {\r\n      tx.executeSql(\r\n        'INSERT INTO users (email, password) VALUES (?, ?)', [email, password],\r\n        (_, result) => {\r\n          if (result.rowsAffected > 0) {\r\n            alert('Đăng ký thành công.');\r\n            handleLogIn();\r\n          } else {\r\n            alert('Đăng ký thất bại. Vui lòng thử lại.');\r\n          }\r\n        },\r\n        (_, error) => {\r\n          console.error('Lỗi thêm người dùng:', error);\r\n          alert('Đăng ký thất bại. Vui lòng thử lại.');\r\n        }\r\n      )\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Center flex={1}>\r\n      <Box safeArea p={2} w=\"100%\" h=\"100%\" bg=\"white\" rounded=\"lg\" justifyContent=\"center\">\r\n        <Heading size=\"lg\" color=\"coolGray.800\" _dark={{ color: 'warmGray.50' }} fontWeight=\"semibold\" textAlign=\"center\">\r\n          Welcome\r\n        </Heading>\r\n        <VStack space={3} mt={5}>\r\n          <FormControl>\r\n            <FormControl.Label>Email</FormControl.Label>\r\n            <Input placeholder=\"Email\" value={email} onChangeText={text => setEmail(text)} />\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <FormControl.Label>Password</FormControl.Label>\r\n            <Input placeholder=\"Password\" type=\"password\" value={password} onChangeText={text => setPassword(text)} />\r\n            <FormControl.HelperText _text={{ fontSize: 'xs' }}>\r\n              Password phải có trên 8 ký tự và phải có ký tự in hoa, in thường và ký tự số\r\n            </FormControl.HelperText>\r\n\r\n            {error !== '' && (\r\n              <Text color=\"red.500\" fontSize=\"sm\" mt={2}>\r\n                {error}\r\n              </Text>\r\n            )}\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <FormControl.Label>Confirm Password</FormControl.Label>\r\n            <Input placeholder=\"Confirm Password\" type=\"password\" value={confirmPassword} onChangeText={text => setConfirmPassword(text)} />\r\n          </FormControl>\r\n          <Button mt={2} colorScheme=\"indigo\" onPress={handleSignUp}>\r\n            Sign up\r\n          </Button>\r\n        </VStack>\r\n\r\n        <HStack space={1} alignItems=\"center\" mt={2}>\r\n          <Text>Bạn đã có tài khoản?</Text>\r\n          <Text fontSize=\"md\" color=\"indigo.500\" onPress={handleLogIn}>\r\n            Đăng nhập\r\n          </Text>\r\n        </HStack>\r\n      </Box>\r\n    </Center>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}