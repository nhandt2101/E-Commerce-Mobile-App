{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { Center, Box, Heading, VStack, FormControl, Input, Button, Text, HStack } from 'native-base';\nimport { CheckBox } from 'react-native-elements';\nimport { createTableUser, dropTableUser, insertUser } from \"../../db/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isSelected = _useState10[0],\n    setSelection = _useState10[1];\n  var handleLogIn = function handleLogIn() {\n    navigation.navigate('Login');\n  };\n  useEffect(function () {\n    var _initializeDatabase;\n    function initializeDatabase() {\n      return (_initializeDatabase = _initializeDatabase || _asyncToGenerator(function* () {\n        yield createTableUser();\n      })).apply(this, arguments);\n    }\n    initializeDatabase();\n  }, []);\n  var handleSignUp = function handleSignUp() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      console.log(\"done\");\n      setError('');\n      if (password !== confirmPassword) {\n        setError('Mật khẩu xác nhận không trùng khớp');\n        return;\n      }\n      if (password.length < 8) {\n        setError('Mật khẩu phải nhiều hơn 8 ký tự.');\n        return;\n      }\n      try {\n        yield insertUser(email, password, isSelected);\n        alert('Đăng ký thành công.');\n        handleLogIn();\n      } catch (error) {\n        alert('Đăng ký thất bại. Vui lòng thử lại.');\n      }\n    })).apply(this, arguments);\n  };\n  return _jsx(Center, {\n    flex: 1,\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: 2,\n      w: \"100%\",\n      h: \"100%\",\n      bg: \"white\",\n      rounded: \"lg\",\n      justifyContent: \"center\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        color: \"coolGray.800\",\n        _dark: {\n          color: 'warmGray.50'\n        },\n        fontWeight: \"semibold\",\n        textAlign: \"center\",\n        children: \"Welcome\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: 5,\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Email\"\n          }), _jsx(Input, {\n            placeholder: \"Email\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Password\"\n          }), _jsx(Input, {\n            placeholder: \"Password\",\n            type: \"password\",\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          }), _jsx(FormControl.HelperText, {\n            _text: {\n              fontSize: 'xs'\n            },\n            children: \"Password ph\\u1EA3i c\\xF3 tr\\xEAn 8 k\\xFD t\\u1EF1 v\\xE0 ph\\u1EA3i c\\xF3 k\\xFD t\\u1EF1 in hoa, in th\\u01B0\\u1EDDng v\\xE0 k\\xFD t\\u1EF1 s\\u1ED1\"\n          }), error !== '' && _jsx(Text, {\n            color: \"red.500\",\n            fontSize: \"sm\",\n            mt: 2,\n            children: error\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Confirm Password\"\n          }), _jsx(Input, {\n            placeholder: \"Confirm Password\",\n            type: \"password\",\n            value: confirmPassword,\n            onChangeText: function onChangeText(text) {\n              return setConfirmPassword(text);\n            }\n          })]\n        }), _jsx(CheckBox, {\n          title: \"T\\xE0i kho\\u1EA3n ng\\u01B0\\u1EDDi b\\xE1n h\\xE0ng\",\n          checked: isSelected,\n          onPress: function onPress() {\n            return setSelection(!isSelected);\n          }\n        }), _jsx(Button, {\n          mt: 2,\n          colorScheme: \"indigo\",\n          onPress: handleSignUp,\n          children: \"Sign up\"\n        })]\n      }), _jsxs(HStack, {\n        space: 1,\n        alignItems: \"center\",\n        mt: 2,\n        children: [_jsx(Text, {\n          children: \"B\\u1EA1n \\u0111\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n?\"\n        }), _jsx(Text, {\n          fontSize: \"md\",\n          color: \"indigo.500\",\n          onPress: handleLogIn,\n          children: \"\\u0110\\u0103ng nh\\u1EADp\"\n        })]\n      })]\n    })\n  });\n}\n;","map":{"version":3,"names":["React","useState","useEffect","Center","Box","Heading","VStack","FormControl","Input","Button","Text","HStack","CheckBox","createTableUser","dropTableUser","insertUser","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","_ref2","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","error","setError","_useState9","_useState10","isSelected","setSelection","handleLogIn","navigate","_initializeDatabase","initializeDatabase","_asyncToGenerator","apply","arguments","handleSignUp","console","log","length","alert","flex","children","safeArea","p","w","h","bg","rounded","justifyContent","size","color","_dark","fontWeight","textAlign","space","mt","Label","placeholder","value","onChangeText","text","type","HelperText","_text","fontSize","title","checked","onPress","colorScheme","alignItems"],"sources":["D:/UET - Đặng Trí Nhân - 21020371/Năm 3/Kì 1/Mobile/mobile/E-Commerce-Mobile-App/src/screen/Register/Register.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Center, Box, Heading, VStack, FormControl, Input, Button, Text, HStack } from 'native-base';\r\nimport { CheckBox } from 'react-native-elements';\r\n\r\nimport { createTableUser, dropTableUser, insertUser } from '../../db/user';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isSelected, setSelection] = useState(false);\r\n\r\n  const handleLogIn = () => {\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function initializeDatabase() {\r\n      await createTableUser();\r\n    }\r\n    initializeDatabase();\r\n  }, []);\r\n\r\n  const handleSignUp = async () => {\r\n    console.log(\"done\");\r\n    setError('');\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('Mật khẩu xác nhận không trùng khớp');\r\n      return;\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      setError('Mật khẩu phải nhiều hơn 8 ký tự.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await insertUser(email, password, isSelected);\r\n      alert('Đăng ký thành công.');\r\n      handleLogIn();\r\n    } catch (error) {\r\n      alert('Đăng ký thất bại. Vui lòng thử lại.');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Center flex={1}>\r\n      <Box safeArea p={2} w=\"100%\" h=\"100%\" bg=\"white\" rounded=\"lg\" justifyContent=\"center\">\r\n        <Heading size=\"lg\" color=\"coolGray.800\" _dark={{ color: 'warmGray.50' }} fontWeight=\"semibold\" textAlign=\"center\">\r\n          Welcome\r\n        </Heading>\r\n        <VStack space={3} mt={5}>\r\n          <FormControl>\r\n            <FormControl.Label>Email</FormControl.Label>\r\n            <Input placeholder=\"Email\" value={email} onChangeText={text => setEmail(text)} />\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <FormControl.Label>Password</FormControl.Label>\r\n            <Input placeholder=\"Password\" type=\"password\" value={password} onChangeText={text => setPassword(text)} />\r\n            <FormControl.HelperText _text={{ fontSize: 'xs' }}>\r\n              Password phải có trên 8 ký tự và phải có ký tự in hoa, in thường và ký tự số\r\n            </FormControl.HelperText>\r\n\r\n            {error !== '' && (\r\n              <Text color=\"red.500\" fontSize=\"sm\" mt={2}>\r\n                {error}\r\n              </Text>\r\n            )}\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <FormControl.Label>Confirm Password</FormControl.Label>\r\n            <Input placeholder=\"Confirm Password\" type=\"password\" value={confirmPassword} onChangeText={text => setConfirmPassword(text)} />\r\n          </FormControl>\r\n\r\n          <CheckBox\r\n            title='Tài khoản người bán hàng'\r\n            checked={isSelected}\r\n            onPress={() => setSelection(!isSelected)}\r\n          />\r\n\r\n          <Button mt={2} colorScheme=\"indigo\" onPress={handleSignUp}>\r\n            Sign up\r\n          </Button>\r\n        </VStack>\r\n        <HStack space={1} alignItems=\"center\" mt={2}>\r\n          <Text>Bạn đã có tài khoản?</Text>\r\n          <Text fontSize=\"md\" color=\"indigo.500\" onPress={handleLogIn}>\r\n            Đăng nhập\r\n          </Text>\r\n        </HStack>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}